'''Suppose you have N integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these N numbers successfully if one of the following is true for the ith position (1 <= i <= N) in this array:1. The number at the ith position is divisible by i.2. i is divisible by the number at the ith position.Now given N, how many beautiful arrangements can you construct?'''def countArrangement(self, N: int) -> int:    def helper(i, X, cache = {}):        # guarantee to be divisible        if i == 1:            return 1        # X: values to be checked        # i: index for the divisibility check        key = (i, X)        if key in cache:            return cache[key]        total = 0        for j in range(len(X)):            # check each item            if X[j] % i == 0 or i % X[j] == 0:                total += helper(i - 1, X[:j] + X[j + 1:])        cache[key] = total        return total    return helper(N, tuple(range(1, N + 1)))