"""
Given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string, if it is generated by deleting some characters of a given string without changing its order.

A string is called palindrome if is one that reads the same backward as well as forward.

"""

"""
Good to Know
You need to know the difference between subarray and subsequence.
Subarray need to be consecutiveã€‚
Subsequence don't have to be consecutive.


Intuition
If it's empty sting, return 0;
If it's palindrome, return 1;
Otherwise, we need at least 2 operation.


Explanation
We can delete all characters 'a' in the 1st operation,
and then all characters 'b' in the 2nd operation.
So return 2 in this case


Complexity
Time O(N)
Space O(N), also O(1) space checking palindrome is suuggested.
"""

class Solution:
    def removePalindromeSub(self, s: str) -> int:
        return 2 - (s == s[::-1]) - (s == "")